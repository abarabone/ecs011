
・アトラス単位でバッファを作成
　（モデル単位でも問題ない）

・アセットにテクスチャ配列を格納する
　・いずれはエディタ用のスクリプトとかシェーダーとか用意したいかも

・とりあえずカラーのサブインデックスを流用する
　必要そうなら独立させる



-------------------------------


・１つのメッシュ
・複数のテクスチャ
  ↓
・アトラス化
・ＵＶオフセット化（オフセット＋倍率）

・ＵＶオフセットバッファ

・モデル構築時
  ・アトラス未定
    → アトラスが決まるのは、インスタンス登録完了時
      ・インスタンス登録中はまだアトラス未作成
      登録完了後
        アトラス作成（ＵＶオフセット決定）
          ↓
        ＵＶオフセットバッファ構築

・モデルはＵＶ関係ない
  どの頂点がどのテクスチャに対応しているか、のみが関係する
  （つまりテクスチャのＩＤ）

案１
・ＵＶパレットのコレクトと、モデルで使用してるテクスチャのパッキングを
  両方やらないといけない（１つのアトラスに収める必要がある）
  ・モデルにＵＶパレットを組み込む（同じソースキーで異なるＵＶ情報）
　・ＵＶパレット配列を持つＧＯをモデルグループ階層中においておく
・モデルコンバート時に、ＵＶパレットコレクトもやる？
　・最後に、全アトラスをなめてＵＶバッファを生成するとか？

案２
・ＵＶパレットは、ソースキーが同じモデル間のマテリアルで構築する。
・カラーのようにＵＶパレットアセットの配列で指定、ではない。
　→ 配列で指定しても、見た目


・インスタンスでは
  ・

・
・インスタンスごと　使用テクスチャ登録　


・テクスチャはアトラス内にそこまでたくさん入れるわけではない

・パレット内インデックスは、数 bit でもなんとかなる

・カラーとＵＶは同じサブインデックスでもよいか？

・エディターでインスタンスの見え方を確認する

・ストレッチはスケールで


モデル構築
  ・メッシュ内部インデックスのみを考えればよい
インスタンス登録
  ・インスタンスは、ＵＶパレットを割り当てる
  ・ＵＶパレットの index をコンポーネントにセットする
ＵＶオフセットバッファ構築
  ・ＵＶオフセットは、アトラス作成時まで確定しない



